<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yks.ticket.lite.dao.master.TicketDao">

  <select id="findByProject">
    select id
      , title
    from t_ticket
    where project_id = #{pid}
  </select>

  <select id="findTicketMaster">
    select M.m_key, M.id, M.name
    from (
        select 'kind' m_key
          , T1.id, T1.name, T1.disp_seq
        from t_ticket_kind T1
        where T1.project_id = #{pid}
          and T1.available = 'yes'

        union all

        select 'progress' m_key
          , T2.id, T2.name, T2.disp_seq
        from t_ticket_progress T2
        where T2.project_id = #{pid}
          and T2.available = 'yes'

        union all

        select 'status' m_key
          , T3.id, T3.name, T3.disp_seq
        from t_ticket_stat T3
        where T3.project_id = #{pid}
          and T3.available = 'yes'

        union all

        select 'priority' m_key
          , T4.id, T4.name, T4.disp_seq
        from t_ticket_priority T4
        where T4.project_id = #{pid}
          and T4.available = 'yes'
    ) M
    order by M.disp_seq
  </select>

  <select id="findMaxId">
    select max(id) max_id from t_ticket
  </select>

  <insert id="addTicket">
    insert into t_ticket (
        id				    --チケットID
      , title				  --チケットタイトル
      , description		--チケットの説明
      , status_id			--状態ID
      , kind_id			  --種類ID
      , priority_id		--優先順位ID
      , progress_id		--進捗ID
      , start_date		--開始日
      , finish_date		--終了日
      , project_id		--プロジェクトID
      , createUserId	--作成者ID
      , updateUserId	--更新者ID
    ) values (
        #{id}				    --チケットID
      , #{title}				--チケットタイトル
      , #{description}	--チケットの説明
      , #{status_id}		--状態ID
      , #{kind_id}			--種類ID
      , #{priority_id}	--優先順位ID
      , #{progress_id}	--進捗ID
      , #{start_date}		--開始日
      , #{finish_date}	--終了日
      , #{project_id}		--プロジェクトID
	    , #{createUserId} --作成者ID
	    , #{createUserId} --更新者ID
    )
  </insert>

  <select id="findById">
    select
        id	--チケットID
      , title				  --チケットタイトル
      , description		--チケットの説明
      , status_id			--状態ID
      , kind_id			  --種類ID
      , priority_id		--優先順位ID
      , progress_id		--進捗ID
      , start_date		--開始日
      , finish_date		--終了日
      , project_id		--プロジェクトID
      , updatedate as last_update	--最終更新日時
      , versionNo as version  --バージョンNo
    from t_ticket
    where id = #{tid}
  </select>

  <update id="updateTicket">
    update t_ticket set
        title = #{title}			    	  --チケットタイトル
      , description = #{description}	--チケットの説明
      , status_id = #{status_id}			--状態ID
      , kind_id = #{kind_id}			    --種類ID
      , priority_id = #{priority_id}	--優先順位ID
      , progress_id = #{progress_id}	--進捗ID
      , start_date = #{start_date}		--開始日
      , finish_date = #{finish_date}	--終了日
      , project_id = #{project_id}		--プロジェクトID
      , updateDate = CURRENT_TIMESTAMP  --更新日時
      , updateUserId = #{updateUserId}  --更新者ID
      , versionNo = versionNo + 1       --バージョンNo
    where id = #{id}
      and versionNo = #{version}
  </update>

  <select id="findTicket">
    select
        T1.title
      , T1.description
      , case when T1.start_date  is null then '' else to_char(T1.start_date,  'YYYY-MM-DD') end start_date
      , case when T1.finish_date is null then '' else to_char(T1.finish_date, 'YYYY-MM-DD') end finish_date
      , case when M1.name        is null then '' else M1.name end kind_name
      , case when M2.name        is null then '' else M2.name end status_name
      , case when M3.name        is null then '' else M3.name end progress_name
      , case when M4.name        is null then '' else M4.name end priority_name
    from t_ticket T1
    left outer join t_ticket_kind M1     --種類
       on M1.project_id = T1.project_id
      and M1.id = T1.kind_id
    left outer join t_ticket_stat M2     --状態
       on M2.project_id = T1.project_id
      and M2.id = T1.status_id
    left outer join t_ticket_progress M3 --進捗
       on M3.project_id = T1.project_id
      and M3.id = T1.progress_id
    left outer join t_ticket_priority M4 --優先順位
       on M4.project_id = T1.project_id
      and M4.id = T1.priority_id
    where T1.id = #{tid}
      and T1.versionNo = #{version}
  </select>
</mapper>